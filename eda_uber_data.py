# -*- coding: utf-8 -*-
"""EDA Uber data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I_ulMA-FWjtE9X2CPLxBPYKfZSVf9iA-
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
df = pd.read_csv('My Uber Drives - 2016.csv')
df.head()

df.columns

df.shape

df.isnull().sum()

df.drop_duplicates(inplace=True)

df.drop(df.index[[751, 761, 798, 807]], inplace=True)

df.columns = ['START_DATE', 'END_DATE', 'CATEGORY', 'START', 'STOP', 'MILES', 'PURPOSE']

df['START_DATE'] = pd.to_datetime(df['START_DATE'], errors='coerce')
df['END_DATE'] = pd.to_datetime(df['END_DATE'], errors='coerce')
df.info()

df.head()

plt.figure(figsize=(10, 5))
sns.countplot(df['CATEGORY']);

start_labels = df.START.value_counts().nlargest(10)

plt.figure(figsize=(10, 5))
plt.xticks(rotation=75)
sns.barplot(start_labels.index, start_labels);
plt.ylabel('Value Counts');

plt.figure(figsize=(10, 5))
plt.xticks(rotation=75)
sns.barplot(x=start_labels.index, y=start_labels.values)
plt.ylabel('Value Counts')
plt.show()

df['MONTH'] = pd.DatetimeIndex(df['START_DATE']).month

month_label = {1.0: 'Jan', 2.0: 'Feb', 3.0: 'Mar', 4.0: 'April', 5.0: 'May', 6.0: 'June', 7.0: 'July', 8.0: 'Aug', 9.0: 'Sep',
      10.0: 'Oct', 11.0: 'Nov', 12.0: 'Dec' }
df["MONTH"] = df.MONTH.map(month_label)

df.MONTH.unique()

df.head()

month_count = df.MONTH.value_counts()
plt.figure(figsize=(10, 5))
sns.barplot(month_count.index, month_count);
plt.xlabel('Months')
plt.ylabel('Value Counts');

month_count = df.MONTH.value_counts()
plt.figure(figsize=(10, 5))
sns.barplot(x=month_count.index, y=month_count)
plt.xlabel('Months')
plt.ylabel('Value Counts')
plt.show()

miles_dic = {}

for i in df.MILES:
    if i < 10:
        if '0-10 miles' not in miles_dic:
            miles_dic['0-10 miles'] = [i]
        else:
            miles_dic['0-10 miles'].append(i)

    elif i >= 10 and i < 20:
        if '10-20 miles' not in miles_dic:
            miles_dic['10-20 miles'] = [i]
        else:
            miles_dic['10-20 miles'].append(i)

    elif i >= 20 and i < 30:
        if '20-30 miles' not in miles_dic:
            miles_dic['20-30 miles'] = [i]
        else:
            miles_dic['20-30 miles'].append(i)

    elif i >= 30 and i < 40:
        if '30-40 miles' not in miles_dic:
            miles_dic['30-40 miles'] = [i]
        else:
            miles_dic['30-40 miles'].append(i)

    elif i >= 40 and i < 50:
        if '40-50 miles' not in miles_dic:
            miles_dic['40-50 miles'] = [i]
        else:
            miles_dic['40-50 miles'].append(i)
    else:
        if 'Above 50 miles' not in miles_dic:
            miles_dic['Above 50 miles'] = [i]
        else:
            miles_dic['Above 50 miles'].append(i)

len_miles = []
for key in miles_dic:
    len_miles.append((key, len(miles_dic[key])))

plt.figure(figsize=(10, 5))
plt.xticks(rotation=75)
sns.barplot(x=a, y=b)
plt.xlabel('Miles')
plt.ylabel('Count')
plt.show()

df.head()

t = pd.to_datetime(['18:00:00']).time

plt.figure(figsize=(10, 5))
sns.barplot(x=day_night_label.index, y=day_night_label.values)
plt.ylabel('COUNT')
plt.xlabel('DAY/NIGHT')
plt.show()

df['DAY'] = df.START_DATE.dt.weekday

day_label = df.DAY.value_counts()

plt.figure(figsize=(10, 5))
sns.barplot(x=day_label.index, y=day_label.values)
plt.xlabel('DAY')
plt.ylabel('COUNT')
plt.show()

plt.figure(figsize=(10, 5))
sns.countplot(hue='CATEGORY', x='DAY', data=df);